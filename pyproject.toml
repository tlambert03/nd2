[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "cython",
    "setuptools-scm>=6.2",
    "numpy==1.14.5; python_version=='3.7'",
    "numpy==1.17.3; python_version=='3.8'",
    "numpy==1.19.3; python_version=='3.9'",
    "numpy==1.21.3; python_version=='3.10'",
    "numpy==1.23.2; python_version=='3.11'",
]
build-backend = "setuptools.build_meta"


[project]
name = "nd2"
description = "Yet another nd2 (Nikon NIS Elements) file reader"
readme = "README.md"
requires-python = ">=3.7,<3.12"
license = {text = "BSD 3-Clause License"}
authors = [
  {email = "talley.lambert@gmail.com"},
  {name = "Talley Lambert"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
dependencies = [
    "resource-backed-dask-array",
    "typing-extensions",
    "numpy>=1.14.5;python_version=='3.7'",
    "numpy>=1.17.3;python_version=='3.8'",
    "numpy>=1.19.3;python_version=='3.9'",
    "numpy>=1.21.3;python_version=='3.10'",
    "numpy>=1.23.2;python_version=='3.11'",
]

[project.optional-dependencies]
legacy = [
    "imagecodecs",
    "wurlitzer",
]
test = [
    "lxml; python_version<'3.11'",
    "aicsimageio; python_version<'3.11'",
    "Cython",
    "dask[array]",
    "imagecodecs; platform_system=='Windows' or python_version<'3.11'",
    "psutil",
    "pytest-cov",
    "pytest>=6.0",
    "wurlitzer",
    "xarray",
]
dev = [
    "aicsimageio",
    "black",
    "Cython",
    "dask[array]",
    "imagecodecs",
    "ipython",
    "mypy",
    "pre-commit",
    "psutil",
    "pytest-cov",
    "pytest",
    "rich",
    "wurlitzer",
    "ruff",
    "xarray",
]

[project.urls]
homepage = "https://github.com/tlambert03/nd2"
repository = "https://github.com/tlambert03/nd2"
# documentation = "readthedocs.org"
# changelog = "github.com/me/spam/blob/master/CHANGELOG.md"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]  # list of folders that contain the packages (["."] by default)
include = ["nd2*"]  # package names should match these glob patterns (["*"] by default)

# https://github.com/pypa/setuptools_scm/#pyprojecttoml-usage
[tool.setuptools_scm]
write_to = "src/nd2/_version.py"

# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
profile = "black"
src_paths = ["src/nd2", "tests"]

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py37"
src = ["src/nd2", "tests"]
extend-select = [
    "E",    # style errors
    "F",    # flakes
    "D",    # pydocstyle
    "I", # isort
    "U",    # pyupgrade
    # "N",  # pep8-naming
    "S",  # bandit
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]
extend-ignore = [
    # these should be fixed
    "D101", "D105", "D103",
    ###
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D400", # First line should end with a period
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
    "C901", # Function is too complex
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S"]
"scripts/*.py" = ["D"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
addopts = '--color=yes'
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:The distutils package is deprecated::",
    "ignore:The distutils.sysconfig module is deprecated::",
    "ignore:distutils Version classes are deprecated:"
]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/nd2"
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
implicit_reexport = false
show_column_numbers = true
show_error_codes = true
ignore_missing_imports = true
pretty = true

[[tool.mypy.overrides]]
module = 'nd2.structures'
ignore_errors = true

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "except NotImplementedError",
]

[tool.coverage.run]
plugins = ["Cython.Coverage"]
omit = ["tests"]

# https://github.com/cruft/cruft
[tool.cruft]
skip = ["tests"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
  ".cruft.json",
  ".flake8",
  ".github_changelog_generator",
  ".pre-commit-config.yaml",
  "tests/**/*",
  "tox.ini",
  "src/nd2/_version.py"
]
ignore-bad-ideas = [
    "*.so"
]

[tool.cibuildwheel]
# Skip 32-bit builds & PyPy wheels on all platforms
skip = ["*-win32", "*-manylinux_i686", "pp*", "*musllinux*"]
test-requires = "pytest"
test-command = 'pytest "{project}/tests" -v'
test-extras = ["test"]
manylinux-x86_64-image = "manylinux_2_24"

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
repair-wheel-command = [
    "DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel}",
    "DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.linux]
before-all = [
    "apt-get update && apt-get install -y libtiff5-dev",
    "cp {project}/src/sdk/Linux/x86_64/lib/* /lib",
]
