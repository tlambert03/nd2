name: Build & deploy

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - uses: actions/cache@v3
        id: cache
        with:
          path: tests/data
          key: ${{ hashFiles('scripts/download_samples.py') }}

      - name: Download Samples
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install requests
          python scripts/download_samples.py

      - name: Build wheels
        uses: pypa/cibuildwheel@2.7.0

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Build sdist
        if: matrix.os == 'ubuntu-20.04'
        run: |
          pip install check-manifest
          check-manifest
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-20.04'
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TWINE_API_KEY }}

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
