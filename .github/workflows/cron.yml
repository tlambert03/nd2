name: --pre Test
# An "early warning" cron job that will install dependencies
# with `pip install --pre` periodically to test for breakage
# (and open an issue if a test fails)

on:
  schedule:
    - cron: '0 */12 * * *'  # every 12 hours
  workflow_dispatch:

jobs:

  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - python-version: "3.7"
            platform: "ubuntu-latest"
          - python-version: "3.8"
            platform: "ubuntu-latest"
          - python-version: "3.8"
            platform: "windows-latest"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cache
        with:
          path: tests/data
          key: ${{ hashFiles('scripts/download_samples.py') }}

      - name: Download Samples
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install requests
          python scripts/download_samples.py

      - name: Build
        run: pip install --pre -e .[test]

      - name: Test
        run: pytest -v --cov=nd2 --cov-report=xml --cov-report=term

      # If something goes wrong, we can open an issue in the repo
      - name: Report Failures
        if: ${{ failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLATFORM: ${{ matrix.platform }}
          PYTHON: ${{ matrix.python }}
          RUN_ID: ${{ github.run_id }}
          TITLE: '[test-bot] pip install --pre is failing'
        with:
          filename: .github/TEST_FAIL_TEMPLATE.md
          update_existing: true
